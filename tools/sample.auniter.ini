# AUniter top level configs. Recognized parameters:
#   * monitor
#   * port_timeout (default 120)
#   * baud (default 115200)
[auniter]
  monitor = picocom -b $baud --omap crlf --imap lfcrlf --echo $port
#  monitor = microcom -s $baud -p $port

# Board aliases. These come from the --fqbn flag of the Arduino IDE or the
# Arduino CLI. To update these values (when the 3rd party core updates the
# flags) or to add support for new boards, configure the Arduino IDE for
# "verbose" mode or pass the `-v` flag to the CLI, then compile a small test
# program. Capture the debugging output and search somewhere deep in the logs
# for a line that contains a `--fqbn` flag. Copy the value of that flag to
# here. The `arduino-cli boards listall` command may also help.
[boards]
# "Arduino/Genuino Uno"
  uno = arduino:avr:uno
# "Arduino Nano ATmega328P (Old Bootloader)"
  nano = arduino:avr:nano:cpu=atmega328old
# "Arduino Pro or Pro Mini" "ATmega328P (5V, 16MHz)"
  promini8 = arduino:avr:pro:cpu=8MHzatmega328
# "Arduino Pro or Pro Mini" "ATmega328P (3.3V, 8MHz)"
  promini16 = arduino:avr:pro:cpu=16MHzatmega328
# "Arduino Leonardo"
  leonardo = arduino:avr:leonardo
# "SparkFun Pro Micro" 8MHz
  promicro8 = SparkFun:avr:promicro:cpu=8MHzatmega32U4
# "SparkFun Pro Micro" 16MHz
  promicro16 = SparkFun:avr:promicro:cpu=16MHzatmega32U4
# "Arduino/Genuino Mega or Mega2560"
  mega = arduino:avr:mega:cpu=atmega2560
# "Seeedduino XIAO", SAMD21
  xiao = Seeeduino:samd:seeed_XIAO_m0:usbstack=arduino,debug=off,sercom4=include
# STM32 generic blue pill F103C8, using the HID bootloader
# (https://github.com/Serasidis/STM32_HID_Bootloader). As noted on many
# websites, many Blue Pill boards come with 128kB of flash instead of 64kB, and
# it seems like my boards support 128kB. So let's define the board to be an
# F103CB not F103C8 ('b' not 'eight') to get access to that 128kB.
  stm32 = STMicroelectronics:stm32:GenF1:pnum=BLUEPILL_F103CB,upload_method=hidMethod,xserial=generic,usb=CDCgen,xusb=FS,opt=osstd,rtlib=nano
# "Generic ESP8266 Module" for ESP01
  esp01 = esp8266:esp8266:generic:xtal=80,vt=flash,exception=legacy,ssl=all,ResetMethod=nodemcu,CrystalFreq=26,FlashFreq=40,FlashMode=dout,eesz=1M64,led=1,sdk=nonosdk_190703,ip=lm2f,dbg=Disabled,lvl=None____,wipe=none,baud=115200
# "NodeMCU 1.0 (ESP-12E)" for generic ESP8266 module
  nodemcuv2 = esp8266:esp8266:nodemcuv2:xtal=80,vt=flash,exception=disabled,ssl=all,eesz=4M2M,led=2,ip=lm2f,dbg=Disabled,lvl=None____,wipe=none,baud=921600
# "ESP32 Dev Module" for DevKit V1 (I think?)
  esp32 = esp32:esp32:esp32:PSRAM=disabled,PartitionScheme=default,CPUFreq=240,FlashMode=qio,FlashFreq=80,FlashSize=4M,UploadSpeed=921600,DebugLevel=none
# "Adafruit ItsyBitsy M0 Express (SAMD21)"
  itsym0 = adafruit:samd:adafruit_itsybitsy_m0:opt=small,usbstack=arduino,debug=off
# "Adafruit ItsyBitsy M4 (SAMD51)"
  itsym4 = adafruit:samd:adafruit_itsybitsy_m4:cache=on,speed=120,opt=small,maxqspi=50,usbstack=arduino,debug=off
# Teensy 3.2
  teensy32 = teensy:avr:teensy31:usb=serial,speed=96,opt=o2std,keys=en-us

# Valid parameters of the [env:{environment}] section:
#
# board = {alias} - board alias from [boards] action
# locking = (true | false) - whether to use flock to lock the /dev/tty port
# exclude = egrep regular expression of files to exclude. Multiple files can be
#     specified using the '(a|b)' pattern supported by egrep.
# preprocessor = space-separated list of preprocessor symbols in the form of
#    -DMACRO -DMACRO=value -DMACRO="string value"

# An Arduino UNO target.
[env:uno]
  board = uno
  preprocessor = -DAUNITER_UNO

# Small box with an Arduino Nano for continuous integration.
# Two buttons on Pin 2 and 3.
[env:nano]
  board = nano
  preprocessor = -DAUNITER_NANO -DAUNITER_LEFT_BUTTON=2 -DAUNITER_RIGHT_BUTTON=3

# Small box with an Arduino Pro Micro clone for continuous integration.
# Locking does not work for boards using virtual serial ports, so turn it off.
# Hardware: button on Pin 3
[env:micro]
  board = promicro16
  locking = false
  preprocessor = -DAUNITER_MICRO

# Small box with an ESP8266 for continuous integration.
# The 'AceButton/examples/CapacitiveButton' sketch does not work on ESP8266.
[env:esp8266]
  board = nodemcuv2
  exclude = AceButton/examples/CapacitiveButton
  preprocessor = -DAUNITER_ESP8266 -DAUNITER_SSID="MyWiFi" -DAUNITER_PASSWORD="mypassword"

# Small box with an ESP32 for continuous integration.
# The 'AceButton/examples/CapacitiveButton' sketch does not work on ESP32.
[env:esp32]
  board = esp32
  exclude = AceButton/examples/CapacitiveButton
  preprocessor = -DAUNITER_ESP32 -DAUNITER_SSID="MyWiFi" -DAUNITER_PASSWORD="mypassword"
